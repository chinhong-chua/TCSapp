@model IEnumerable<TCSapp.Models.StockTbl>

@{
    ViewBag.Title = "Index";
}

<h2>Watchlist</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")

    </p>*@
<!--<div>

    @using (Html.BeginForm("ImportFromExcel", "StockTbls", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <input type="file" name="postedFile" />
        if (TempData["ErrorMessage"] != null)
        {
            <span class="text-danger">@TempData["ErrorMessage"]</span>
        }
        if (TempData["SuccessMessage"] != null)
        {
            <span class="text-success">@TempData["SuccessMessage"]</span>
        }
        
        <div style="margin-top:20px">
            <input type="submit" button id="upload" value="Import" class="btn-success" />
        </div>
    }
</div>-->
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Ticker)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StockDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OpeningPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.High)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Low)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClosingPrice)
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Volume)
        </th>


        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Ticker)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StockDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OpeningPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.High)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Low)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClosingPrice)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Volume)
            </td>



            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.StockID }) |
                    @Html.ActionLink("Details", "Details", new { id=item.StockID }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.StockID })
                </td>*@
            <td>
                <div style="text-align: center">
                   
                    <a id="confirmDialog" href="#" value="@item.Ticker" onclick="setID(@item.StockID)">@item.Ticker<span class="fa fa-chart-line "></span></a>
                </div>
            </td>

        </tr>
    }

</table>





<fieldset>

    @*<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group">
            <div class="modal-section-header">
                <p>Insured Details - Insurance Certificate Issuance</p>
            </div>
        </div>*@

    <div>
        @using (Html.BeginForm("ExportToExcel", "StockTbls", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

            <div>
                <input type="submit" value="Export" class="btn-primary" />
            </div>

        }
    </div>



</fieldset>


<!-- Modal -->
<div class="modal fade" id="dialog-confirm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @*<div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Delete Program</h4>
                </div>*@
            <div class="modal-body">
                <div id="div" class="row" style="">

                    <div class="row form-group form-inline" style="margin-top:5px;display:none;">
                        <label class="col-sm-5 control-label" for="ticker">Ticker:</label>
                        <div class="col-sm-7">
                            <input id="valueTicker" type="text" class="form-control input-sm"
                                   style="height:25px;width:100%"  />
                        </div>
                    </div>

                    <label class="form-control col-sm-2 input-sm " for="startDate" style="color:black">Start Date:</label>
                    <div class="col-sm-4">

                        <input id="startDate" type="text" class="form-control input-sm datepicker"
                               style="height:25px;width:100%" value="01/01/2016" />
                    </div>
                    <label class="form-control col-sm-2 input-sm " for="endDate" style="color:black">End Date:</label>
                    <div class="col-sm-4">
                        <input id="endDate" type="text" class="form-control input-sm datepicker"
                               style="height:25px;width:100%" value=@DateTime.Now.ToString("MM/dd/yyyy") />
                    </div>


                    @*<div class="row form-group form-inline" style="margin-top:20px">
                            <div class="col-sm-5"></div>
                            <div class="col-sm-7">
                                <button id="btnCreateChart" class="btn btn-primary">Create Chart</button>
                            </div>
                        </div>*@


                    <div id="chart" style="width:100%;height:700px;overflow:hidden;padding:10px">
                        <div id="candlestick" style="height:55%"></div>
                        <div id="volume" style="height:30%;margin-top:-1%"></div>
                        <div id="filter" style="height:15%;margin-top:1%"></div>
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-primary" id="btnRefresh">Refresh</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>


            </div>
        </div>
    </div>
</div>

<script>
    $(".datepicker").datepicker({ dateFormat: 'mm/dd/yy' });
</script>

@section scripts{

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

    <script>
        var tradeid;
        function setID(val) {
            //document.getElementById("valueTicker").value = "My value";
            tradeid = val;
          
        }


        $("#upload").click(function () {
            debugger;
            if (window.FormData == undefined)
                alert("Error: FormData is undefined");

            else {
                var fileUpload = $("#postedFile").get(0);
                var files = fileUpload.files;

                var fileData = new FormData();

                fileData.append(files[0].name, files[0]);

                $.ajax({
                    url: '/InsuranceCertificate/ImportFromExcel',
                    type: 'post',
                    datatype: 'json',
                    contentType: false,
                    processData: false,
                    async: false,
                    data: fileData,
                    success: function (response) {
                        alert(response);
                    }
                });
            }

        });
        //onclick
                $(function () {
            $('body').on('click', '#openDialog, #editDialog', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#dialog-edit');
                $(this).attr('data-toggle', 'modal');
            });

            // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
            $('body').on('click', '.modal-close-btn', function () {
                $('#dialog-edit').modal('hide');
            });
            //clear modal cache, so that new content can be loaded
            $('#dialog-edit').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });


            $('body').on('click', '#confirmDialog', function (e) {
                e.preventDefault();
                deleteLinkObj = $(this);  //for future use
                $(this).attr('data-target', '#dialog-confirm');
                $(this).attr('data-toggle', 'modal');
               
               
            
                createStockChart()

            });

            //Everytime we press sumbit on the modal form...
                    $('#btnRefresh').click(function () {
                 // window.location.href = '@Url.Action("Delete", "TradeTbls")/' + tradeid;
                //$.post(deleteLinkObj[0].href, function (data) {  //Post to action
                //    deleteLinkObj.closest(".row").hide('fast'); //Hide Row
                        //});
                       
                        createStockChart()
               // $('#dialog-confirm').modal('hide');

            });

        });

             function createStockChart() {
            google.charts.load('current', { 'packages': ['corechart', 'controls'] });
            google.charts.setOnLoadCallback(drawChart);
            var chart_div = document.getElementById('chart');
            var ticker = tradeid;
                 var startDate = document.getElementById('startDate').value;
                 var endDate = document.getElementById('endDate').value;

            var viewStartDate = (new Date(endDate));
            viewStartDate.setMonth(viewStartDate.getMonth() - 3);
            var viewEndDate = new Date(endDate);

            function drawChart() {
                var data = new google.visualization.DataTable();
                data.addColumn('datetime', 'Date');
                data.addColumn('number', 'Open');
                data.addColumn('number', 'High');
                data.addColumn('number', 'Low');
                data.addColumn('number', 'Close');
                data.addColumn('number', 'Volume');

              

                $.ajax({

                    url: '@Url.Action("GetStockData", "ApiStockData")',

                    data: { ticker: ticker, start: startDate, end: endDate, period: 'daily'},
                    //url: '/api/apiStockData/' + ticker + '/' + startDate + '/' + endDate + '/daily',
                    method: 'GET'



                }).done(function (d) {
                   // alert(d);
                    var s = JSON.parse(d);
                    for (var i = 0; i < s.length; i++) {
                        var ticker = s[i]["Ticker"];
                        var date = s[i]["Date"];
                        var open = s[i]["Open"];
                        var high = s[i]["High"];
                        var low = s[i]["Low"];
                        var close = s[i]["Close"];
                        var volume = s[i]["Volume"];

                        data.addRow([{ v: new Date(date), f: date }, open,
                            high, low, close, volume]);

                    }
                    //d.forEach(function (di) {
                    //    data.addRow([{ v: new Date(di.date), f: di.date }, di.open,
                    //        di.high, di.low, di.close, di.volume]);
                    //    alert(di.volume);
                    //});
                    //alert('22');
                    var dashboard = new google.visualization.Dashboard(chart_div);
                    var control = new google.visualization.ControlWrapper({
                        controlType: 'ChartRangeFilter',
                        containerId: 'filter',
                        options: {
                            filterColumnIndex: 0,
                            ui: {
                                chartType: 'LineChart',
                                chartOptions: {
                                    chartArea: {
                                        height: '80%', width: '85%', left: 100,
                                        backgroundColor: { stroke: "gray", strokeWidth: 1 }
                                    },
                                    hAxis: { baselineColor: 'none' }
                                },
                                chartView: { columns: [0, 4] },
                            }
                        },
                        state: {
                            range: {
                                start: viewStartDate,
                                end: viewEndDate
                            }
                        }
                    });


                    var chart = new google.visualization.ChartWrapper({
                        chartType: 'CandlestickChart',
                        containerId: 'candlestick',
                        options: {
                            chartArea: {
                                height: '80%', width: '85%', left: 100,
                                backgroundColor: { stroke: "gray", strokeWidth: 1 }
                            },
                            hAxis: {
                                type: 'category', slantedText: false, maxTextLines: 1,
                                maxAlternation: 1
                            },
                            legend: { position: 'none' },
                            candlestick: {
                                fallingColor: { strokeWidth: 0, fill: '#a52714' },
                                risingColor: { strokeWidth: 0, fill: '#0f9d58' }
                            },
                            title: 'Stock Price: ' + ticker,
                        },
                        view: { columns: [0, 3, 1, 4, 2] }
                    });

                    var volume = new google.visualization.ChartWrapper({
                        chartType: 'ColumnChart',
                        containerId: 'volume',
                        options: {
                            chartArea: {
                                height: '80%', width: '85%', left: 100, top: 40, bottom: 30,
                                backgroundColor: { stroke: "gray", strokeWidth: 1 }
                            },
                            hAxis: {
                                type: 'category', slantedText: false, maxTextLines: 1,
                                maxAlternation: 1
                            },
                            legend: { position: 'none' },
                            title: "Volume: " + ticker
                        },
                        view: { columns: [0, 5] }
                    });
                   ;
                    dashboard.bind(control, [chart, volume]);
                    dashboard.draw(data);

                }).fail(function () {
                    alert('Failed to create the chart. Please try it again.');
                });
            }
        }
    </script>

}  